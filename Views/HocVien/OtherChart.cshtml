@model IEnumerable<C500Hemis.Models.TbHocVien>

@{
    ViewData["Title"] = "Thống kê loại khuyết tật";
    var disabilityCounts = ViewData["DisabilityCounts"];
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Thống kê theo loại khuyết tật</h5>
                    <select class="form-select form-select-sm w-auto" id="chartType">
                        <option value="pie">Biểu đồ tròn</option>
                        <option value="bar">Biểu đồ cột</option>
                        <option value="doughnut">Biểu đồ vòng</option>
                        <option value="polarArea">Biểu đồ polar</option>
                    </select>
                </div>
                <div class="card-body">
                    <canvas id="pieChartDisable"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: transform 0.2s;
        margin-bottom: 2rem;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .card-body {
        min-height: 400px;
        padding: 1.5rem;
    }

    .card-header {
        background-color: rgba(0, 0, 0, 0.03);
        padding: 1rem 1.5rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

    .card-title {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 500;
    }

    canvas {
        width: 100% !important;
        height: 100% !important;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let chart = null;
    const colors = {
        backgroundColor: [
            'rgba(255, 99, 132, 0.5)',
            'rgba(54, 162, 235, 0.5)',
            'rgba(255, 206, 86, 0.5)',
            'rgba(75, 192, 192, 0.5)',
            'rgba(153, 102, 255, 0.5)',
            'rgba(255, 159, 64, 0.5)'
        ],
        borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ]
    };

    function createChart(type) {
        const ctx = document.getElementById('pieChartDisable').getContext('2d');
        const disabilityData = @Html.Raw(Json.Serialize(disabilityCounts));
        const labels = disabilityData.map(item => item.loaiKhuyetTat);
        const data = disabilityData.map(item => item.count);

        if (chart) {
            chart.destroy();
        }

        chart = new Chart(ctx, {
            type: type,
            data: {
                labels: labels,
                datasets: [{
                    label: 'Số lượng',
                    data: data,
                    backgroundColor: colors.backgroundColor,
                    borderColor: colors.borderColor,
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 20,
                            usePointStyle: true
                        }
                    },
                    title: {
                        display: true,
                        text: 'Thống kê số lượng theo loại khuyết tật',
                        font: {
                            size: 16
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        display: type === 'bar'
                    }
                },
                animation: {
                    animateScale: true,
                    animateRotate: true,
                    duration: 1000
                }
            }
        });
    }

    // Khởi tạo biểu đồ ban đầu
    document.addEventListener('DOMContentLoaded', function() {
        createChart('pie');
    });

    // Xử lý sự kiện thay đổi loại biểu đồ
    document.getElementById('chartType').addEventListener('change', function(e) {
        createChart(e.target.value);
    });
</script>
