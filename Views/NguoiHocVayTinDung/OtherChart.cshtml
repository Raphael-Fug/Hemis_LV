@model IEnumerable<C500Hemis.Models.TbHocVien>

@{
    ViewData["Title"] = "Thống kê vay tín dụng";
    var ttvay = ViewData["ttvay"];
}

<div class="container-fluid py-3">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center py-2">
                    <h6 class="card-title mb-0">Thống kê vay tín dụng</h6>
                    <select class="form-select form-select-sm" style="width: 130px" id="chartType">
                        <option value="pie">Biểu đồ tròn</option>
                        <option value="doughnut">Biểu đồ vòng</option>
                        <option value="bar">Biểu đồ cột</option>
                    </select>
                </div>
                <div class="card-body chart-container">
                    <canvas id="pieChartDisable"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        box-shadow: 0 2px 4px rgba(0,0,0,.08);
        margin-bottom: 1rem;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #eee;
    }

    .chart-container {
        position: relative;
        height: 350px;
        padding: 1rem;
    }

    .card-title {
        color: #444;
        font-size: 0.95rem;
        font-weight: 500;
    }

    .form-select-sm {
        font-size: 0.875rem;
        padding: 0.25rem 0.5rem;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let chart = null;
    const colors = {
        backgroundColor: [
            'rgba(54, 162, 235, 0.7)',
            'rgba(255, 99, 132, 0.7)',
            'rgba(255, 206, 86, 0.7)',
            'rgba(75, 192, 192, 0.7)',
            'rgba(153, 102, 255, 0.7)',
            'rgba(255, 159, 64, 0.7)'
        ],
        borderColor: [
            'rgba(54, 162, 235, 1)',
            'rgba(255, 99, 132, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ]
    };

    function createChart(type, labels, data) {
        const ctx = document.getElementById('pieChartDisable').getContext('2d');

        if (chart) {
            chart.destroy();
        }

        const config = {
            type: type,
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: colors.backgroundColor,
                    borderColor: colors.borderColor,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            boxWidth: 12,
                            padding: 15,
                            font: {
                                size: 12
                            }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${context.label}: ${value} sinh viên (${percentage}%)`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        display: type === 'bar',
                        beginAtZero: true,
                        ticks: {
                            font: { size: 11 }
                        }
                    },
                    x: {
                        display: type === 'bar',
                        ticks: {
                            font: { size: 11 }
                        }
                    }
                },
                animation: {
                    duration: 500
                }
            }
        };

        chart = new Chart(ctx, config);
    }

    // Khởi tạo dữ liệu
    const vayData = @Html.Raw(Json.Serialize(ttvay));
    const labels = vayData.map(item => item.ttvay);
    const data = vayData.map(item => item.count);

    // Khởi tạo biểu đồ khi trang load xong
    document.addEventListener('DOMContentLoaded', function() {
        createChart('pie', labels, data);
    });

    // Xử lý sự kiện thay đổi loại biểu đồ
    document.getElementById('chartType').addEventListener('change', function(e) {
        createChart(e.target.value, labels, data);
    });
</script>
